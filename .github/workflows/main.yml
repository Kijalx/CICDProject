name: CI

on:
  push:
    branches:
      - PrinterDatabase

jobs:
  build-book-database:
    name: Book Database Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build bookDatabase
        working-directory: BookDatabase
        run: mvn package

      - name: Run bookDatabase Tests
        working-directory: BookDatabase
        run: mvn test

      - name: Build bookDatabase Docker image
        working-directory: BookDatabase
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/book:latest .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/book:latest

  build-event-database:
    name: Event Database Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build eventDatabase
        working-directory: EventDatabase
        run: mvn package

      - name: Run eventDatabase Tests
        working-directory: EventDatabase
        run: mvn test

      - name: Build eventDatabase Docker image
        working-directory: EventDatabase
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/event:latest .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/event:latest

  build-frontend:
    name: Frontend Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build frontend Docker image
        working-directory: frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/app:latest .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/app:latest

  build-login-database:
    name: Login Database Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build LoginDatabase
        working-directory: LoginDatabase
        run: mvn package

      - name: Run LoginDatabase Tests
        working-directory: LoginDatabase
        run: mvn test

      - name: Build LoginDatabase Docker image
        working-directory: LoginDatabase
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/login:latest .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/login:latest

  build-printer-database:
    name: Printer Database Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build printerDatabase
        working-directory: PrinterDatabase
        run: mvn package

      - name: Run PrinterDatabase Tests
        working-directory: PrinterDatabase
        run: mvn test

      - name: Build printerDatabase Docker image
        working-directory: PrinterDatabase
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/printer:latest .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/printer:latest